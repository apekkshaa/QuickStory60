<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Profile Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.3.0/fonts/remixicon.css" rel="stylesheet" />
    <link href="https://fonts.cdnfonts.com/css/helvetica-neue-55" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/profile.css">
</head>

<body>
    <!--Nav bar-->
    <div
        class="navbar-custom w-full py-3 py-1 d-flex justify-content-between align-items-center bg-zinc-800 text-white">
        <div class="d-flex align-items-center gap-2">
            <a href="/feed" class="logo-container">
                <img src="/images/NAVQS.PNG" alt="pin logo" class="img1">
            </a>
            <a href="/feed" class="nav-link">Home</a>
        </div>

        <a href="/logout" class="nav-link">Logout</a>
    </div>
    </div>

    <!-- Flash error messagedisplay -->
    <% if (error && error.length> 0) { %>
        <div class="alert alert-danger">
            <%= error %>
        </div>
        <% } %>

            <!--Profile container-->
            <div class="containerbox">
                <div class="cardbox">
                    <div class="profile-picture position-relative">
                        <img src="/images/uploads/<%= user.profileimage %>" alt="Profile Picture"
                            class="img-fluid rounded-circle">
                        <form id="uploadform" hidden action="/fileupload" method="post" enctype="multipart/form-data">
                            <input type="file" name="picture" accept=".jpg, .jpeg, .png">
                        </form>
                        <span id="uploadicon" class="position-absolute">
                            <i class="ri-pencil-line"></i>
                        </span>
                    </div>

                    <h2 class="name">
                        <%= user.fullname %>
                    </h2>
                    <h3 class="username">@<%= user.username %>
                    </h3>
                    <!-- Toggle Visibility Section 
                    <div class="toggle-wrapper d-flex align-items-center mb-3">
                        <label for="toggleVisibility" class="me-2">Make your account private</label>
                        <input type="checkbox" id="toggleVisibility">
                    </div>-->
                    <button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#createPostModal">
                        Create Post
                    </button>
                </div>
                <!--<p class="tagline">some tagline</p>
            <p class="description">some description</p>
            <a href="" class="button btn btn-dark">Create Post</a>
            <form action="/upload" method="post" enctype="multipart/form-data">
                <input type="text" name="filecaption" placeholder="some caption" class="form-control mb-2">
                <input type="file" name="file" class="form-control mb-2">
                <input type="submit" class="btn btn-primary">
            </form>
        </div>-->

                <!--Posts-->
                <div class="container">
                    <div class="grid">
                        <% user.posts.forEach(function(post){ %>
                            <div class="card">
                                <video class="card-video" id="video-<%= post._id %>" controls muted>
                                    <source src="/images/uploads/<%= post.image %>" type="video/mp4"
                                        class="card-img-top" alt="...">
                                </video>
                                <div class="card-body">
                                    <h5 class="card-title">
                                        <%= post.imageText %>
                                    </h5>
                                    <div class="edit-icons">
                                        <a href="#" class="edit-post" data-post-id="<%= post._id %>">
                                            <i class="ri-image-edit-fill"></i>
                                        </a>
                                        <a href="#" class="delete-post" data-post-id="<%= post._id %>">
                                            <i class="ri-delete-bin-fill"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <% }) %>
                    </div>
                </div>

                <!-- Create Post Modal -->
                <div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="createPostModalLabel">Create Post</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div id="error-container"></div>
                                <div class="mb-3">
                                    <input type="text" id="filecaption" placeholder="Add Caption" class="form-control">
                                </div>
                                <div class="mb-3">
                                    <input type="file" id="file" class="form-control" accept="video/mp4">
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary" id="submitBtn">Submit</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Modal for edit post -->
                <div class="modal fade" id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel"
                    aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="editPostModalLabel">Edit Post</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal"
                                    aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div id="editErrorContainer"></div>
                                <div class="mb-3">
                                    <input type="text" id="editFileCaption" placeholder="Edit Caption"
                                        class="form-control">
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="button" class="btn btn-primary" id="editSubmitBtn">Save
                                        Changes</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Create Post -->
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        document.querySelector('#submitBtn').addEventListener('click', function () {
                            const filecaption = document.querySelector('#filecaption').value;
                            const file = document.querySelector('#file').files[0];

                            const formData = new FormData();
                            formData.append('filecaption', filecaption);
                            formData.append('file', file);

                            fetch('/upload', {
                                method: 'POST',
                                body: formData,
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Network response was not ok');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    // Handle success, if needed
                                    console.log('Success:', data);
                                    window.location.reload(); // Example: reload page after successful submission
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    // Display error message
                                    const errorContainer = document.querySelector('#error-container');
                                    errorContainer.innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
                                });
                        });
                    });
                </script>

                <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
                    integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
                    crossorigin="anonymous">
                    </script>

                <!-- Edit Profile -->
                <script>
                    document.querySelector("#uploadicon").addEventListener("click", function () {
                        document.querySelector("#uploadform input").click();
                    });

                    document.querySelector("#uploadform input").addEventListener("change", function () {
                        document.querySelector("#uploadform").submit();
                    });
                </script>

                <!-- Edit and Delete Post -->
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        const editButtons = document.querySelectorAll('.edit-post');
                        const deleteButtons = document.querySelectorAll('.delete-post');
                        const editModal = new bootstrap.Modal(document.getElementById('editPostModal'));

                        // Edit post button click handler
                        editButtons.forEach(button => {
                            button.addEventListener('click', function (event) {
                                event.preventDefault();
                                const postId = this.getAttribute('data-post-id');
                                const currentCaption = document.querySelector(`#editPostModal #editFileCaption`).value;

                                // Prefill the modal input with current post caption
                                document.querySelector(`#editPostModal #editFileCaption`).value = currentCaption;

                                // Show the modal
                                editModal.show();

                                // Save changes button click handler
                                document.querySelector('#editSubmitBtn').addEventListener('click', function () {
                                    const editedCaption = document.querySelector(`#editPostModal #editFileCaption`).value;
                                    fetch(`/posts/${postId}/edit`, {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({ imageText: editedCaption }),
                                    })
                                        .then(response => {
                                            if (!response.ok) {
                                                throw new Error('Network response was not ok');
                                            }
                                            return response.json();
                                        })
                                        .then(data => {
                                            console.log('Success:', data);
                                            window.location.reload(); // Reload page after successful edit
                                        })
                                        .catch(error => {
                                            console.error('Error:', error);
                                            const editErrorContainer = document.querySelector('#editErrorContainer');
                                            editErrorContainer.innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
                                        });
                                });
                            });
                        });

                        // Delete post button click handler
                        deleteButtons.forEach(button => {
                            button.addEventListener('click', function (event) {
                                event.preventDefault();
                                const postId = this.getAttribute('data-post-id');

                                fetch(`/posts/${postId}/delete`, {
                                    method: 'DELETE',
                                })
                                    .then(response => {
                                        if (!response.ok) {
                                            throw new Error('Network response was not ok');
                                        }
                                        return response.json();
                                    })
                                    .then(data => {
                                        console.log('Success:', data);
                                        window.location.reload(); // Reload page after successful delete
                                    })
                                    .catch(error => {
                                        console.error('Error:', error);
                                        // Handle error as needed
                                    });
                            });
                        });
                    });
                </script>

</body>

</html>