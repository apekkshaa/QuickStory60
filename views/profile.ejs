<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Profile Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link href="https://cdn.jsdelivr.net/npm/remixicon@4.3.0/fonts/remixicon.css" rel="stylesheet" />
    <link href="https://fonts.cdnfonts.com/css/helvetica-neue-55" rel="stylesheet">
    <link rel="stylesheet" href="/stylesheets/profile.css">
</head>
<!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-WWCR6LY8B9"></script>
<script>
    window.dataLayer = window.dataLayer || [];
    function gtag() { dataLayer.push(arguments); }
    gtag('js', new Date());

    gtag('config', 'G-WWCR6LY8B9');
</script>

<body>
    <!--Nav bar-->
    <div class="navbar-custom">
        <div class="d-flex align-items-center gap-2">
            <a href="/feed" class="logo-container">
                <img src="/images/NAVQS.PNG" alt="pin logo" class="img1">
            </a>
            <a href="/feed" class="nav-link">Home</a>
        </div>

        <form class="search-container d-flex" action="/search" method="get">
            <i class="ri-search-line search-icon"></i>
            <input class="form-control me-2 search-input" type="text" placeholder="Search" name="username" required>
            <button class="search-btn btn-outline-dark" type="submit">Search</button>
        </form>

        <a href="/logout" class="nav-link">Logout</a>
    </div>

    <!-- Flash error message display -->
    <% if (error && error.length> 0) { %>
        <div class="alert alert-danger">
            <%= error %>
        </div>
        <% } %>

            <!--Profile container-->
            <div class="containerbox">
                <div class="cardbox">
                    <div class="profile-picture position-relative">
                        <img src="/images/uploads/<%= user.profileimage %>" alt="Profile Picture"
                            class="img-fluid rounded-circle">
                        <% if (user._id.toString()===loggedInUser._id.toString()) { %>
                            <form id="uploadform" hidden action="/fileupload" method="post"
                                enctype="multipart/form-data">
                                <input type="file" name="picture" accept=".jpg, .jpeg, .png">
                            </form>
                            <span id="uploadicon" class="position-absolute">
                                <i class="ri-pencil-line"></i>
                            </span>
                            <% } %>
                    </div>

                    <h2 class="name">
                        <%= user.fullname %>
                    </h2>
                    <h3 class="username">@<%= user.username %>
                    </h3>

                    <% if (user._id.toString()===loggedInUser._id.toString()) { %>
                        <button type="button" class="btn btn-dark" data-bs-toggle="modal"
                            data-bs-target="#createPostModal">
                            Create Post
                        </button>
                        <% } %>
                </div>
            </div>

            <!--Posts-->
            <div class="container">
                <div class="grid">
                    <% user.posts.forEach(function(post){ %>
                        <div class="card">
                            <video class="card-video" id="video-<%= post._id %>" controls muted>
                                <source src="/images/uploads/<%= post.image %>" type="video/mp4" class="card-img-top"
                                    alt="...">
                            </video>
                            <div class="card-body">
                                <div class="card-title-container">
                                    <h5 class="card-title">
                                        <%= post.imageText %>
                                    </h5>
                                    <div class="like-container">
                                        <i class="ri-heart-fill" id="like-icon-<%= post._id %>"></i>
                                        <span class="like-count" id="like-count-<%= post._id %>">0</span>
                                    </div>
                                </div>
                                <% if (user._id.toString()===loggedInUser._id.toString()) { %>
                                    <div class="edit-icons">
                                        <a href="#" class="edit-post" data-post-id="<%= post._id %>">
                                            <i class="ri-image-edit-fill"></i>
                                        </a>
                                        <a href="#" class="delete-post" data-post-id="<%= post._id %>">
                                            <i class="ri-delete-bin-fill"></i>
                                        </a>
                                    </div>
                                    <% } %>
                            </div>
                        </div>
                        <% }) %>
                </div>
            </div>

            <!-- Create Post Modal -->
            <div class="modal fade" id="createPostModal" tabindex="-1" aria-labelledby="createPostModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="createPostModalLabel">Create Post</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div id="error-container"></div>
                            <div class="mb-3">
                                <input type="text" id="filecaption" placeholder="Add Caption" class="form-control">
                            </div>
                            <div class="mb-3">
                                <input type="file" id="file" class="form-control" accept="video/mp4">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" id="submitBtn">Submit</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal for edit post -->
            <div class="modal fade" id="editPostModal" tabindex="-1" aria-labelledby="editPostModalLabel"
                aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editPostModalLabel">Edit Post</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <div id="editErrorContainer"></div>
                            <div class="mb-3">
                                <input type="text" id="editFileCaption" placeholder="Edit Caption" class="form-control">
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                <button type="button" class="btn btn-primary" id="editSubmitBtn">Save
                                    Changes</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Create Post -->
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    document.querySelector('#submitBtn').addEventListener('click', function () {
                        const filecaption = document.querySelector('#filecaption').value;
                        const file = document.querySelector('#file').files[0];

                        const formData = new FormData();
                        formData.append('filecaption', filecaption);
                        formData.append('file', file);

                        fetch('/upload', {
                            method: 'POST',
                            body: formData,
                        })
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                // Handle success, if needed
                                console.log('Success:', data);
                                window.location.reload(); // Example: reload page after successful submission
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                // Display error message
                                const errorContainer = document.querySelector('#error-container');
                                errorContainer.innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
                            });
                    });
                });
            </script>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
                integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
                crossorigin="anonymous"></script>

            <!-- Edit Profile -->
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    document.querySelector("#uploadicon").addEventListener("click", function () {
                        document.querySelector("#uploadform input[type='file']").click();
                    });

                    document.querySelector('#uploadform input[type="file"]').addEventListener("change", function () {
                        document.querySelector("#uploadform").submit();
                    });
                });
            </script>

            <!-- search text -->
            <script>
                $(document).ready(function () {
                    // When the search input is clicked, it gains focus to start typing
                    $('.search-input').on('click', function () {
                        $(this).focus();
                    });
                });
            </script>

            <!-- Add these scripts to handle like, edit, and delete actions -->
            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Handle like functionality
                    const likeIcons = document.querySelectorAll('.ri-heart-fill');
                    likeIcons.forEach(icon => {
                        const postId = icon.id.split('-')[2];
                        const likeCountElement = document.getElementById('like-count-' + postId);

                        fetch(`/posts/${postId}/likes`)
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                likeCountElement.textContent = data.likeCount;
                                if (data.hasLiked) {
                                    icon.classList.add('liked');
                                } else {
                                    icon.classList.remove('liked');
                                }
                            });

                        icon.addEventListener('click', function () {
                            fetch(`/posts/${postId}/like`, {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Network response was not ok');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    likeCountElement.textContent = data.likeCount;
                                    if (data.hasLiked) {
                                        this.classList.add('liked');
                                    } else {
                                        this.classList.remove('liked');
                                    }
                                });
                        });
                    });

                    // Handle post edit functionality
                    document.querySelectorAll('.edit-post').forEach((button) => {
                        button.addEventListener('click', function () {
                            const postId = this.getAttribute('data-post-id');
                            fetch(`/posts/${postId}`)
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Network response was not ok');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    const editCaptionInput = document.querySelector('#editFileCaption');
                                    editCaptionInput.value = data.imageText; // Assuming 'imageText' is the caption field

                                    const editSubmitBtn = document.querySelector('#editSubmitBtn');
                                    editSubmitBtn.onclick = function () {
                                        const newCaption = editCaptionInput.value;
                                        fetch(`/update-caption/${postId}`, {
                                            method: 'POST',
                                            headers: {
                                                'Content-Type': 'application/json',
                                            },
                                            body: JSON.stringify({ caption: newCaption }), // Send the new caption
                                        })
                                            .then(response => {
                                                if (!response.ok) {
                                                    throw new Error('Network response was not ok');
                                                }
                                                return response.json();
                                            })
                                            .then(data => {
                                                console.log('Success:', data);
                                                window.location.reload(); // Reload page after successful caption update
                                            })
                                            .catch(error => {
                                                console.error('Error:', error);
                                                // Display error message
                                                const editErrorContainer = document.querySelector('#editErrorContainer');
                                                editErrorContainer.innerHTML = `<div class="alert alert-danger">${error.message}</div>`;
                                            });
                                    };

                                    // Show the edit post modal
                                    const editPostModal = new bootstrap.Modal(document.getElementById('editPostModal'));
                                    editPostModal.show();
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                });
                        });
                    });

                    // Handle post delete functionality
                    document.querySelectorAll('.delete-post').forEach((button) => {
                        button.addEventListener('click', function () {
                            const postId = this.getAttribute('data-post-id');
                            fetch(`/posts/${postId}`, {
                                method: 'DELETE',
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Network response was not ok');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    // Handle success, if needed
                                    console.log('Success:', data);
                                    window.location.reload(); // Example: reload page after successful deletion
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    alert('Failed to delete post');
                                });
                        });
                    });
                });
            </script>


</body>

</html>